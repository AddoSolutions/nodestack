{"version":3,"sources":["client.js"],"names":[],"mappings":"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","file":"client-compiled.js","sourcesContent":["\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Client = require(\"node-rest-client\").Client;\n\nvar OpenstackClient = (function () {\n\n\t/**\n  * This gets the ball rolling with authentication with OpenStack\n  * @param authEndpoint {String} The endpoint of the keystone token manager (ex: \"http://10.101.0.10:5000\")\n  * @param username {String,{}} Either the username of the user to login as (ex: \"admin\") OR the complete object you wish to authenticate with.\n  * @param password {String} The password you wish to authenticate with (ex: \"admin\")\n  * @param project {String} The project/tenant name you want to use for authentication (ex: \"ethode\")\n  */\n\n\tfunction OpenstackClient(authEndpoint, username, password, project) {\n\t\t_classCallCheck(this, OpenstackClient);\n\n\t\tif (!authEndpoint || !username) {\n\t\t\tthrow new Exception(\"You must specify an authentication endpoint and authentication data!\");\n\t\t}\n\n\t\tif (typeof username == \"string\") {\n\t\t\tthis.authData = {\n\t\t\t\tpasswordCredentials: {\n\t\t\t\t\tusername: username,\n\t\t\t\t\tpassword: password\n\t\t\t\t},\n\t\t\t\ttenantName: project\n\t\t\t};\n\t\t} else {\n\t\t\tthis.authData = username;\n\t\t}\n\n\t\tthis.authEndpoint = authEndpoint;\n\t\tthis.client = new Client();\n\t\tthis.token = false;\n\n\t\tthis.waiting = [];\n\n\t\tthis._initToken();\n\t}\n\n\t_createClass(OpenstackClient, {\n\t\t_initToken: {\n\n\t\t\t/**\n    * This get's our token and will run any pre-requested code\n    * @param cb {Function} The function to execute upon completion\n    * @private\n    */\n\n\t\t\tvalue: function _initToken(cb) {\n\n\t\t\t\tvar self = this;\n\n\t\t\t\tthis.client.post(this.authEndpoint + \"/v2.0/tokens\", {\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tauth: this.authData\n\t\t\t\t\t},\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\"Content-Type\": \"application/json\" }\n\t\t\t\t}, function (data) {\n\t\t\t\t\tself.token = data.access.token.id;\n\n\t\t\t\t\tif (cb) cb(self.token);\n\n\t\t\t\t\tconsole.info(\"Got Token: \" + self.token);\n\n\t\t\t\t\tself.waiting.forEach(function (item) {\n\t\t\t\t\t\tself._do(item.type, item.url, item.data, item.cb);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tget: {\n\n\t\t\t/**\n    * Performs a GET request on the url given\n    * @param url {String} The URL to hit for your request\n    * @param cb {Function} The function to call when request succeeds (ex: function(data, response){})\n    * @returns {*} This/Myself\n    */\n\n\t\t\tvalue: function get(url, cb) {\n\t\t\t\treturn this._do(\"get\", url, {}, cb);\n\t\t\t}\n\t\t},\n\t\tpost: {\n\n\t\t\t/**\n    * Performs a POST request on the url given\n    * @param url {String} The URL to hit for your request\n    * @param data {*} Whatever you want to send in your request to the server\n    * @param cb {Function} The function to call when request succeeds (ex: function(data, response){})\n    * @returns {*} This/Myself\n    */\n\n\t\t\tvalue: function post(url, data, cb) {\n\t\t\t\treturn this._do(\"post\", url, data, cb);\n\t\t\t}\n\t\t},\n\t\tput: {\n\n\t\t\t/**\n    * Performs a PUT request on the url given\n    * @param url {String} The URL to hit for your request\n    * @param data {*} Whatever you want to send in your request to the server\n    * @param cb {Function} The function to call when request succeeds (ex: function(data, response){})\n    * @returns {*} This/Myself\n    */\n\n\t\t\tvalue: function put(url, data, cb) {\n\t\t\t\treturn this._do(\"put\", url, data, cb);\n\t\t\t}\n\t\t},\n\t\tonReady: {\n\n\t\t\t/**\n    * Will call the function passed into this function when a token has been successfully obtained\n    * @param cb {Function} The function to call when request succeeds (ex: function(data, response){})\n    * @returns {*} This/Myself\n    */\n\n\t\t\tvalue: function onReady(cb) {\n\t\t\t\treturn this._do(\"onReady\", false, false, cb);\n\t\t\t}\n\t\t},\n\t\t_do: {\n\n\t\t\t/**\n    * Actually does the requests\n    * @param type {String} post/get/put/etc\n    * @param url The URL we want to hit\n    * @param data The data to send, this must NEVER be NULL or everything iwll break\n    * @param cb\n    * @returns {*}\n    * @private\n    */\n\n\t\t\tvalue: function _do(type, url, data, cb) {\n\n\t\t\t\tif (!this.token) {\n\t\t\t\t\tthis.waiting.push({\n\t\t\t\t\t\ttype: type,\n\t\t\t\t\t\turl: url,\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tcb: cb\n\t\t\t\t\t});\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t\tif (type == \"onReady\") {\n\t\t\t\t\tif (cb) cb();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconsole.info(\"Running Request (\" + type + \"): \" + url);\n\n\t\t\t\tvar args = {\n\t\t\t\t\tdata: data,\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t\"X-Auth-Token\": this.token,\n\t\t\t\t\t\t\"X-Auth-Project-Id\": this.project\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.client[type](url, args, cb);\n\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn OpenstackClient;\n})();\n\nmodule.exports = OpenstackClient;"]}